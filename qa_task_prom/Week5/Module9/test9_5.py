'''Описати клас Користувач (User), який задовольняє наступні умови:

В класі оголошений атрибут класу count_users, в який при створенні об'єкту класу User записувати нову кількість користувачів.
Конструктор класу приймає обов'язковий параметр "ім'я" (name) і зберігає його значення як атрибут об'єкту.
В конструкторі реалізований підрахунок кількості створених об’єктів класу User.
Клас має наступні методи об'єкту:
Змінити ім'я користувача (change_username) з обов'язковим параметром username, який в результаті роботи змінює значення атрибуту об'єкту name на значення параметру username.
Клас має наступні методи класу:
Вивід кількості вже створених (get_count) користувачів на екран.
Клас має наступні статичні методи:
Підготувати ім'я (prepare_name) з обов'язковими параметрами name, last_name, second_name, який повертає в результаті роботи Бутенко С.О. при введених значеннях "Сергій", "Бутенко", "Олександрович".
Додаткові умови:
Ім'я користувача (name) вводиться користувачем з клавіатури;
Нове ім'я користувача (new_name) вводиться користувачем з клавіатури;
Нове прізвище користувача (new_last_name) вводиться користувачем з клавіатури;
Нове по батькові користувача (new_second_name) вводиться користувачем з клавіатури;
Обов'язково використовуйте декоратори.
Використовуйте запропоновані назви методів і класів.
Очікуваний результат виконання програми:

Для набору вхідних даних ("Сергій", "Степан", "Бандера", "Андрійович") – текст на екрані:
"Сергій"
1
1
"Бандера С.А."
2
2
Для набору вхідних даних ("Сергій", "Тарас", "Шевченко", "Григорович") – текст на екрані:
"Сергій"
1
1
"Шевченко Т.Г."
2
2
Увага!

Не змінюйте наведений стартовий код. Своє рішення набирайте під коментарем # your code goes here
Для позначення блоків коду використовуйте відступи в 4 пробіли.
Будьте уважні з вхідними даними
Не використовуйте без нагальної потреби будь-які зайві символи в тексті, який ви виводите на екран - можуть виникати непередбачувані помилки під час автоматичної перевірки
'''

name = input("Введіть ім'я користувача  ")
new_name = input("Введіть нове ім'я користувача ")
new_last_name = input("Введіть нове прізвище користувача ")
new_second_name = input("Введіть нове по батькові користувача ")

class User:
    count_users = 0
    def __init__(self, name):
        self.name = name
        User.count_users +=1
    
    def change_username(self, username):
         self.name = username
    
    @classmethod
    def get_count(cls):
        print(cls.count_users)

    @staticmethod
    def prepare_name(name, last_name, second_name):
        return f"{last_name} {name[0]}.{second_name[0]}."


new_username = User.prepare_name(new_name, new_last_name, new_second_name)

user1 = User(name)
print(user1.name)
print(User.count_users)
print(user1.count_users)
user1.change_username(new_username)
print(user1.name)

user2 = User(name)
print(User.count_users)
print(user2.count_users)